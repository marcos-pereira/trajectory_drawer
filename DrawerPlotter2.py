# -*- coding: utf-8 -*-
"""
Created on Friday September 23 21:10:35 2016
@author: marcos
"""

# this is a comment
import matplotlib.pyplot as plt
from matplotlib.backends.backend_pdf import PdfPages
import numpy as np
import sys # used to get input arguments
import os # used to get current dir

if len(sys.argv) != 4:
    print "No trajectory file specified!"
    print "Expect the trajectory file generated by Drawer.PrintTrajectoryToFile()!"
    print "To use the DrawerPlotter correctly:"
    print "DrawerPlotter <trajectory_file_name.txt>"
    sys.exit()

try:
  file = open(sys.argv[1], "r")
except IOError:
  print "There was an error reading the trajectory file: " + sys.argv[1]
  print "Check for errors on the file name."
  sys.exit()

try:
  file = open(sys.argv[2], "r")
except IOError:
  print "There was an error reading the trajectory file: " + sys.argv[1]
  print "Check for errors on the file name."
  sys.exit()

try:
  file = open(sys.argv[3], "r")
except IOError:
  print "There was an error reading the trajectory file: " + sys.argv[1]
  print "Check for errors on the file name."
  sys.exit()  

print "Input arguments:" + str(sys.argv[1])
print "Number of arguments:" + str(len(sys.argv))

filename = sys.argv[1]
x_trajectory_file = sys.argv[1]
y_trajectory_file = sys.argv[2]
z_trajectory_file = sys.argv[3]
pdf_plot_file = PdfPages(filename + ".pdf")

x_trajectory_file = sys.argv[1]

#-------------------------------------------------------------------------------        
#-------------------------------------------------------------------------------

with open(x_trajectory_file) as f:
#    w, h = [float(x) for x in f.readline().split()] # read first line
    array = []
    for line in f: # read rest of lines
        array.append([float(x) for x in line.split()])                

x_trajectory = [row[0] for row in array]

with open(y_trajectory_file) as f:
#    w, h = [float(x) for x in f.readline().split()] # read first line
    array = []
    for line in f: # read rest of lines
        array.append([float(x) for x in line.split()])                

y_trajectory = [row[0] for row in array]

with open(z_trajectory_file) as f:
#    w, h = [float(x) for x in f.readline().split()] # read first line
    array = []
    for line in f: # read rest of lines
        array.append([float(x) for x in line.split()])                

z_trajectory = [row[0] for row in array]

# -------------------------------------------------------------------------------------------------------------------
# -------------------------------------------- XYZ TRAJECTORIES ---------------------------------------------------------
# -------------------------------------------------------------------------------------------------------------------    
print "Plot xyz trajectories"
plt.figure()
plt.subplot(3,1,1)    
plt.plot(x_trajectory, "r", label = "r")
# plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,ncol=2, mode="expand", borderaxespad=0.)        
plt.ylabel('x - trajectory')
plt.xlabel('step')    
plt.subplot(3,1,2)    
plt.plot(y_trajectory, "r", label = "y")
plt.ylabel('y - trajectory')
plt.xlabel('step')    
plt.subplot(3,1,3)    
plt.plot(z_trajectory, "r", label = "z")
plt.ylabel('z - trajectory')
plt.xlabel('step')
pdf_plot_file.savefig()  

print "Plot trajectory planes"
plt.figure()
# plt.subplot(3,1,1)    
plt.plot(x_trajectory, y_trajectory, "r", label = "plane xy")
# plt.legend(bbox_to_anchor=(0., 1.02, 1., .102), loc=3,ncol=2, mode="expand", borderaxespad=0.)        
plt.ylabel('y - trajectory')
plt.xlabel('x - trajectory')    
pdf_plot_file.savefig()  

# plt.subplot(3,1,2)    
plt.figure()
plt.plot(x_trajectory, z_trajectory, "r", label = "plane xz")
plt.ylabel('z - trajectory')
plt.xlabel('x - trajectory')    
pdf_plot_file.savefig()  

# plt.subplot(3,1,3)    
plt.figure()
plt.plot(y_trajectory, z_trajectory, "r", label = "plane yz")
plt.ylabel('z - trajectory')
plt.xlabel('y - trajectory')
pdf_plot_file.savefig()  

print "Plot 3D trajectory"
from mpl_toolkits.mplot3d import Axes3D
from matplotlib import cm
from matplotlib.ticker import LinearLocator, FormatStrFormatter
fig = plt.figure()
ax = fig.gca(projection='3d')
surf = ax.plot_surface(x_trajectory, y_trajectory, z_trajectory, 
                        # rstride=1, 
                        # cstride=1, 
                        cmap=cm.coolwarm,
                        linewidth=0, 
                        antialiased=False)
ax.plot(x_trajectory, y_trajectory, z_trajectory)
ax.set_xlabel("x - trajectory")
ax.set_ylabel("y - trajectory")
ax.set_zlabel("z - trajectory")
# fig.colorbar(surf, shrink=0.5, aspect=5)
# plt.show()
pdf_plot_file.savefig()  


pdf_plot_file.close()

print "Trajectory plots can be seen at " + filename + ".pdf at:"
cwd = os.getcwd()
print cwd + "/" + filename + ".pdf"
#-------------------------------------------------------------------------------        
#-------------------------------------------------------------------------------

